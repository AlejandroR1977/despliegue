generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model customizations {
  order_item_id Int
  order_id      BigInt
  customization customizations_customization
  order_items   order_items                  @relation(fields: [order_item_id, order_id], references: [order_item_id, order_id], onDelete: NoAction, onUpdate: NoAction, map: "customizations_ibfk_1")

  @@id([order_item_id, order_id, customization])
}

model order_items {
  order_item_id          Int
  product_id             BigInt?
  order_id               BigInt
  quantity               Int
  price_at_time_of_order Float
  customizations         customizations[]
  products               products?        @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_ibfk_1")
  orders                 orders           @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_ibfk_2")

  @@id([order_item_id, order_id])
  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model orders {
  order_id     BigInt        @id @default(autoincrement())
  status       orders_status @default(PENDING)
  user_id      BigInt
  order_date   DateTime      @db.DateTime(0)
  pickup_time  DateTime      @db.DateTime(0)
  total_amount Float
  deleted      Boolean?      @default(false)
  order_items  order_items[]
  users        users         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")

  @@index([user_id], map: "user_id")
}

model products {
  product_id  BigInt        @id @default(autoincrement())
  name        String        @db.VarChar(100)
  description String?       @db.VarChar(512)
  price       Float
  available   Boolean?      @default(true)
  type        products_type
  deleted     Boolean?      @default(false)
  order_items order_items[]
}

model users {
  user_id         BigInt     @id @default(autoincrement())
  username        String     @db.VarChar(50)
  hashed_password String     @db.Char(64)
  email           String     @db.VarChar(100)
  role            users_role
  phone_number    String     @db.Char(10)
  deleted         Boolean?   @default(false)
  orders          orders[]
}

enum orders_status {
  PENDING
  IN_PROCESS
  READY
  DELIVERED
  CANCELED
}

enum customizations_customization {
  TOMATE
  LECHUGA
  MAYONESA
  CEBOLLA
  CHORIZO
}

enum users_role {
  GUEST
  ADMIN
  USER
}

enum products_type {
  BEBIDAS
  DOGOS
  HAMBURGUESAS
  ENSALADAS
  PAPAS
  DULCES
}
