generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model customization_types {
  customization_id                     Int                                    @id @default(autoincrement())
  name                                 String                                 @db.VarChar(50)
  customization_types_for_product_type customization_types_for_product_type[]
  item_customizations                  item_customizations[]
}

model customization_types_for_product_type {
  customization_type_id Int
  product_type_id       Int
  customization_types   customization_types @relation(fields: [customization_type_id], references: [customization_id], onDelete: NoAction, onUpdate: NoAction, map: "customization_types_for_product_type_ibfk_1")
  product_types         product_types       @relation(fields: [product_type_id], references: [product_type_id], onDelete: NoAction, onUpdate: NoAction, map: "customization_types_for_product_type_ibfk_2")

  @@id([customization_type_id, product_type_id])
  @@index([product_type_id], map: "product_type_id")
}

model item_customizations {
  order_item_id         Int
  order_id              BigInt
  customization_type_id Int
  order_items           order_items         @relation(fields: [order_item_id, order_id], references: [order_item_id, order_id], onDelete: NoAction, onUpdate: NoAction, map: "item_customizations_ibfk_1")
  customization_types   customization_types @relation(fields: [customization_type_id], references: [customization_id], onDelete: NoAction, onUpdate: NoAction, map: "item_customizations_ibfk_2")

  @@id([order_item_id, order_id, customization_type_id])
  @@index([customization_type_id], map: "customization_type_id")
}

model order_items {
  order_item_id          Int
  product_id             BigInt?
  order_id               BigInt
  quantity               Int
  price_at_time_of_order Float
  date_time              DateTime              @db.DateTime(0)
  item_customizations    item_customizations[]
  products               products?             @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_ibfk_1")
  orders                 orders                @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_ibfk_2")

  @@id([order_item_id, order_id])
  @@unique([order_item_id, order_id], map: "order_items_index_0")
  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model orders {
  order_id     BigInt        @id @default(autoincrement())
  status       orders_status @default(PENDING)
  user_id      BigInt
  order_time   DateTime      @db.DateTime(0)
  pickup_time  DateTime      @db.DateTime(0)
  cc_datetime  DateTime?     @db.DateTime(0)
  total_amount Float
  deleted      Boolean?      @default(false)
  order_items  order_items[]
  users        users         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")

  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_types {
  product_type_id                      Int                                    @id @default(autoincrement())
  name                                 String                                 @db.VarChar(50)
  preparation_time                     Int
  customization_types_for_product_type customization_types_for_product_type[]
  products                             products[]
}

model products {
  product_id    BigInt         @id @default(autoincrement())
  name          String         @db.VarChar(100)
  description   String?        @db.VarChar(512)
  price         Float
  available     Boolean?       @default(true)
  type          Int?
  image_path    String?        @db.VarChar(255)
  deleted       Boolean?       @default(false)
  order_items   order_items[]
  product_types product_types? @relation(fields: [type], references: [product_type_id], onDelete: NoAction, onUpdate: NoAction, map: "products_ibfk_1")

  @@index([type], map: "type")
}

model users {
  user_id         BigInt     @id @default(autoincrement())
  username        String     @db.VarChar(50)
  hashed_password String     @db.Char(64)
  email           String     @db.VarChar(100)
  role            users_role
  phone_number    String     @db.Char(10)
  deleted         Boolean?   @default(false)
  orders          orders[]
}

enum orders_status {
  PENDING
  IN_PROCESS
  READY
  DELIVERED
  CANCELED
}

enum users_role {
  GUEST
  ADMIN
  USER
}
